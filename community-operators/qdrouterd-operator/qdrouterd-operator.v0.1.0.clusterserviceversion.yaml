apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: >-
      [{"apiVersion":"interconnectedcloud.github.io/v1alpha1","kind":"Qdrouterd","metadata":{"name":"my-interconnect"},"spec":{"count":2,"deploymentMode": "lbfrontend"}}]
    capabilities: Basic Install
    categories: "Streaming & Messaging, Networking"
    description: "Layer 7 addressing across Kubernetes clusters"
    certified: "false"
    containerImage: "quay.io/interconnectedcloud/qdrouterd-operator"
    createdAt: "2019-04-24T14:00:00Z"
    repository: https://github.com/interconnectedcloud/qdrouterd-operator
    support: interconnectedcloud@redhat.com
  name: qdrouterd-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - version: v1alpha1
      kind: Qdrouterd
      description: An instance of Qdrouterd
      displayName: Qdrouterd
      name: qdrouterds.interconnectedcloud.github.io
      resources:
      - kind: Service
        version: v1
      - kind: Deployment
        version: v1
      - kind: ServiceAccount
        version: v1
      - kind: qdrouterds
        version: v1alpha1
      - kind: rolebindings
        version: v1
      - kind: pods
        version: v1
      - kind: configmaps
        version: v1
      - kind: roles
        version: v1
      - kind: routes
        version: v1
      - kind: secrets
        version: v1
      specDescriptors:
      - description: The desired number of member pods for qdrouterd mesh
        displayName: Count
        path: count
      - description: The deployment mode
        displayName: DeploymentMode
        path: deploymentMode
      - description: The Image
        displayName: Image
        path: image
      - description: Listeners for incoming connections to the router
        displayName: Listeners
        path: listeners
      - description: Listeners for inter router mesh connections
        displayName: InterRouterListeners
        path: interRouterListeners
      - description: TLS/SSL configuration for connections
        displayName: SslProfiles
        path: sslProfiles
      - description: Address configuration for distribution and phasing
        displayName: Addresses
        path: addresses
      statusDescriptors:
      - description: The current revision of the qdrouterd cluster
        displayName: Revision Number
        path: revNumber
      - description: The current pods
        displayName: Pods
        path: pods
      - description: The current conditions
        displayName: Conditions
        path: conditions
    required:
    - version: v1alpha1
      kind: Certificate
      description: A declaration of a required Certificate
      displayName: Certificate
      name: certificates.certmanager.k8s.io
      resources:
      - kind: Secret
        name: ""
        version: v1
      specDescriptors:
      - description: The name of the secret into which the certificate credentials are put
        displayName: Secret Name
        path: secretName
      - description: A reference to the issuer to use when creating the certificate
        displayName: Issuer
        path: issuerRef
      - description: The common name to include in the certificate
        displayName: Common Name
        path: commonName
      - description: Additional DNS names to include in the certificate
        displayName: DNS Names
        path: dnsNames
    - version: v1alpha1
      kind: Issuer
      description: A declaration of a namespace specific issuer
      displayName: Issuer
      name: issuers.certmanager.k8s.io
      resources:
      - kind: Secret
        name: ""
        version: v1
      specDescriptors:
      - description: Identify the issuer as a self signed issuer
        displayName: Self-Signed Issuer
        path: selfSigned
      - description: Identify the issuer as a CA issuer
        displayName: CA Issuer
        path: ca
  description: |

    An operator for managing Layer 7 (a.k.a. Application Layer) addressing and routing within and across [Kubernetes](https://kubernetes.io/) or
    [OpenShift](https://www.openshift.com/) clusters.

    It provides a `Qdrouterd` [Custom Resource Definition](https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/)
    (CRD) that describes a deployment of [Apache Qpid Dispatch Router](https://qpid.apache.org/components/dispatch-router/index.html). The number of
    messaging routers, the deployment topology, address semantics and other desired options can be specified through the CRD.

    ### Usage

    A minimal example of a `qdrouterd` (a.k.a. `qdr`) resource is as follows:

    ```
      apiVersion: interconnectedcloud.github.io/v1alpha1
      kind: Qdrouterd
      metadata:
        name: example-interconnect
      spec:
        count: 3
        deploymentMode: lbfrontend
    ```

    This will create a deployment of 3 router instances, all connected together with default address semantics. It will also create
    a service through which the router mesh can be accessed. It will be listening on port 5672 for AMQP 1.0 client connections and on
    port 8672 for websockets connections. A console is available via the 8672 port also.

    Address semantics can be altered by defining address elements, e.g.:

    ```
      apiVersion: interconnectedcloud.github.io/v1alpha1
      kind: Qdrouterd
      metadata:
        name: example-interconnect
      spec:
        count: 3
        deploymentMode: lbfrontend
        addresses:
        - prefix: foo
          distribution: balanced
        - prefix: bar
          distribution: multicast
        - prefix: baz
          distribution: closest
    ```

    More information on the features of Apache Qpid Dispatch Router can be found here: https://qpid.apache.org/releases/qpid-dispatch-1.7.0/user-guide/index.html

    ### Getting help

    If you encounter any issues while using this operator, you can get help using:

    * [interconnectedcloud mailing list](https://www.redhat.com/mailman/listinfo/interconnectedcloud)

  displayName: Qdrouterd Operator
  install:
    spec:
      deployments:
      - name: qdrouterd-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: qdrouterd-operator
          template:
            metadata:
              labels:
                name: qdrouterd-operator
            spec:
              serviceAccountName: qdrouterd-operator
              containers:
              - command:
                - qdrouterd-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: qdrouterd-operator
                image: quay.io/interconnectedcloud/qdrouterd-operator
                imagePullPolicy: Always
                name: qdrouterd-operator
                ports:
                - containerPort: 60000
                  name: metrics
                resources: {}
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - serviceaccounts
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - "route.openshift.io"
          resources:
          - routes
          - routes/custom-host
          - routes/status
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - "rbac.authorization.k8s.io"
          resources:
          - rolebindings
          - roles
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - "certmanager.k8s.io"
          resources:
          - issuers
          - certificates
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - interconnectedcloud.github.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: qdrouterd-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maturity: alpha
  maintainers:
  - name: Interconnected Cloud
    email: interconnectedcloud@redhat.com
  provider:
      name: Red Hat
  version: 0.1.0
  keywords: ['router', 'amqp', 'messaging', 'communication', 'multi-cloud']
